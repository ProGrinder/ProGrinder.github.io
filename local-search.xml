<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>旋转目标检测(一)-RRPN</title>
    <link href="/2021/10/30/AI-Learning/202111030-%E6%97%8B%E8%BD%AC%E7%9B%AE%E6%A0%87%E6%A3%80%E6%B5%8B(%E4%B8%80)-RRPN/"/>
    <url>/2021/10/30/AI-Learning/202111030-%E6%97%8B%E8%BD%AC%E7%9B%AE%E6%A0%87%E6%A3%80%E6%B5%8B(%E4%B8%80)-RRPN/</url>
    
    <content type="html"><![CDATA[<h1 id="旋转目标检测一-rrpn"><a class="markdownIt-Anchor" href="#旋转目标检测一-rrpn"></a> 旋转目标检测(一)-RRPN</h1><h2 id="简介"><a class="markdownIt-Anchor" href="#简介"></a> 简介</h2><ul><li><strong>论文题目</strong> : Arbitrary-Oriented Scene Text Detection via Rotation Proposals</li><li><strong>论文地址</strong> : <a href="https://arxiv.org/abs/1703.01086">https://arxiv.org/abs/1703.01086</a></li><li><strong>代码实现</strong> : <a href="https://github.com/mjq11302010044/RRPN">https://github.com/mjq11302010044/RRPN</a></li></ul><p><img src="/img/article/2021/10/30/introduce.png" alt="" /></p><p>自然场景文本检测存在的困难：光照不均，模糊，透视畸变，文本不定向等等</p><p>前人提出的使用分段网络（如完全卷积网络[FCN])生成文本预测图，需要几个后处理步骤来生成具有所需方向的最终文本区域建议，通常非常耗时。</p><p>作者提出了基于旋转候选框实现任意方向的场景文本检测，简称RRPN，其思想沿用的是目标检测中的RPN，在其基础上增加了旋转角度信息。最后在三个数据集(MSRA-TD500, ICDAR2013,ICDAR2015)进行了测试，发现它比以前的方法准确而且更有效。</p><h2 id="idea"><a class="markdownIt-Anchor" href="#idea"></a> Idea</h2><ul><li>与先前基于分割的框架不同，作者提出了基于候选框的不定向文本检测，使得候选框可以更好地适应文本区域，可以更好地修正长文本区域</li><li>作者将新提出的RROI池化层和旋转候选框的学习加入到基于候选框区域的结构当中，与传统的基于分割的文本检测框架相比，确保了文本检测的计算效率</li><li>作者提出了任意方向选择候选框的新的修正方法(refinement)，以提高任意文本检测的性能。</li></ul><h2 id="实现"><a class="markdownIt-Anchor" href="#实现"></a> 实现</h2><h3 id="网络结构-rrpn框架"><a class="markdownIt-Anchor" href="#网络结构-rrpn框架"></a> 网络结构-RRPN框架</h3><p><img src="/img/article/2021/10/30/Network.png" alt="RRPN网络结构" /></p><p>RRPN沿用了Faster-RCNN中的RPN的思想(即使用其来生成候选区域)，并在此基础上进行了改进，提出了基于旋转候选网络区域(RRPN)．整个网络结构和Faster-RCNN非常相似，RRPN也是分成并行两路：一路用于预测类别，另一路用于回归旋转矩形框。</p><p>具体步骤如下:</p><ol><li>前端使用非常经典的 <strong>VGG16</strong> 作为主干特征提取网络</li><li>中间采用RRPN主要是用于生成带倾斜角的候选区域，该层输出包括候选框的类别和旋转矩形框的回归</li><li>通过RRoI Pooling将RRPN生成的候选框映射到特征图上，得到最终的文本行检测结果</li></ol><h3 id="具体细节"><a class="markdownIt-Anchor" href="#具体细节"></a> 具体细节</h3><h4 id="1rotated-bounding-box-representation-旋转矩形框的表示"><a class="markdownIt-Anchor" href="#1rotated-bounding-box-representation-旋转矩形框的表示"></a> 1.Rotated Bounding Box Representation-旋转矩形框的表示</h4><p>用(x,y,w,h,θ)表示旋转矩形框：其中(x,y)表示几何矩形中心点坐标,h表示矩形框的短边长度,w 表示矩形框的长边,θ表示x正轴与矩形框长边的夹角。</p><p>围绕矩阵中心旋转α角后，中心锚点坐标公式:</p><p><img src="/img/article/2021/10/30/1.png" alt="" /></p><p>其中 <strong>T</strong> 是平移矩阵, <strong>R</strong> 是旋转矩阵。</p><p><img src="/img/article/2021/10/30/2.png" alt="" /></p><h4 id="2rotation-anchors-strategy-锚点旋转策略"><a class="markdownIt-Anchor" href="#2rotation-anchors-strategy-锚点旋转策略"></a> 2.Rotation Anchors Strategy-锚点旋转策略</h4><p>Anchors 就是按照固定比例（长宽、大小）预定义的框，在后续阶段找出Bounding-box位置和大小，是以这些框为基础。</p><p><img src="/img/article/2021/10/30/3.png" alt="" /></p><p>作者提出的锚点R-anchor有三类策略：</p><ul><li>scale 有8，16，32三种，表示文本行的大小</li><li>ratio 有1：2，1：5，1：8三种，表示文本行的宽高比</li><li>angle 有<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mo>−</mo><mi>π</mi></mrow><mn>6</mn></mfrac></mrow><annotation encoding="application/x-tex">\frac{-\pi}{6}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1473309999999999em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.802331em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">6</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>、<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>0</mn></mrow><annotation encoding="application/x-tex">0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>、<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mi>π</mi><mn>6</mn></mfrac></mrow><annotation encoding="application/x-tex">\frac{\pi}{6}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.040392em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.695392em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">6</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>、<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mi>π</mi><mn>3</mn></mfrac></mrow><annotation encoding="application/x-tex">\frac{\pi}{3}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.040392em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.695392em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>、<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mi>π</mi><mn>2</mn></mfrac></mrow><annotation encoding="application/x-tex">\frac{\pi}{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.040392em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.695392em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>、<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mn>2</mn><mi>π</mi></mrow><mn>3</mn></mfrac></mrow><annotation encoding="application/x-tex">\frac{2\pi}{3}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>六种，表示提议框的旋转角</li></ul><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>E</mi><mo>=</mo><mi>m</mi><msup><mi>c</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">E=mc^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord mathdefault">m</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>E</mi><mo>=</mo><mi>m</mi><msup><mi>c</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">E=mc^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8641079999999999em;vertical-align:0em;"></span><span class="mord mathdefault">m</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></p><p>综上所述，特征图上每个点将生成54个R-anchor（６个方向，３个尺度，３个宽高比）</p><h4 id="3learning-of-rotated-proposal-旋转矩形候选框的学习"><a class="markdownIt-Anchor" href="#3learning-of-rotated-proposal-旋转矩形候选框的学习"></a> 3.Learning of Rotated Proposal-旋转矩形候选框的学习</h4><p>RRPN层会生成很对很多的旋转矩形框，那么这些矩形框中有哪些是需要送入网络参与训练呢？</p><p>首先作者提出了如何确定它们当中用于作为训练的正、负样本的标准:</p><ul><li>训练正样本</li></ul><blockquote><p>需要同时满足以下两种条件:</p><p>1.其与ground truth的IOU大于0.7<br />2.其与ground truth的夹角小于 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mi>π</mi><mn>12</mn></mfrac></mrow><annotation encoding="application/x-tex">\frac{\pi}{12}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.040392em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.695392em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p></blockquote><ul><li>训练负样本</li></ul><blockquote><p>满足以下条件之一:</p><p>1.其与ground truth的IOU小于0.3<br />2.其与ground truth的IOU大于0.7，并且与ground truth的夹角大于 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mi>π</mi><mn>12</mn></mfrac></mrow><annotation encoding="application/x-tex">\frac{\pi}{12}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.040392em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.695392em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">π</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p></blockquote><ul><li>损失函数</li></ul><p>作者采用的是多任务损失函数，总公式如下:</p><p><img src="/img/article/2021/10/30/4.png" alt="" /></p><p>其中分类损失函数L<sub>cls</sub>:<img src="/img/article/2021/10/30/5.png" alt="" /></p><p>其中回归损失函数L<sub>reg</sub>:<img src="/img/article/2021/10/30/6.png" alt="" /></p><h4 id="4proposal-refinement候选框修正"><a class="markdownIt-Anchor" href="#4proposal-refinement候选框修正"></a> 4.Proposal Refinement–候选框修正</h4><p><strong>倾斜IOU的计算</strong></p><p>作者使用的是倾斜的候选框，所以基于水平候选框的IOU计算方法不合适，因此提出了倾斜IOU的计算方法</p><p><img src="/img/article/2021/10/30/7.png" alt="" /></p><p>总体思路：将两个矩形的交点进行顺时针排序并连成多边形，然后分割成一个个小三角形计算总面积。</p><p>以下图（b）举例子，多边形顺序AIJCKL，分割成三角形AIJ,AJC,ACK,AKL,计算这四个三角形的和。</p><p><img src="/img/article/2021/10/30/8.png" alt="" /></p><p><strong>RROI pooling</strong></p><p>针对任意方向的文本，作者提出了旋转ROI池化层．</p><p>将高度为h和宽度为w的旋转候选区域平均划分,每个子区域和候选框的方向相同．具体的实现细节如下</p><p><img src="/img/article/2021/10/30/9.png" alt="" /></p><h2 id="实验结果"><a class="markdownIt-Anchor" href="#实验结果"></a> 实验结果</h2><p>作者最后在三个数据集(MSRA-TD500, ICDAR2013,ICDAR2015)进行了测试，发现它比以前的方法准确而且更有效。</p><p><img src="/img/article/2021/10/30/12.png" alt="" /></p><h2 id="知识索引"><a class="markdownIt-Anchor" href="#知识索引"></a> 知识索引</h2><p><strong>正样本/负样本</strong></p><p>正样本是指属于某一类别的样本,反样本是指不属于某一类别的样本。</p><p><strong>Intersection over Union - IoU - 交并比</strong></p><p><img src="/img/article/2021/10/30/13.png" alt="" /></p><p>交并比 (Intersection-over-Union，IoU)，是候选框(candidate bound) 与 原标记框(ground-truth bounding box)的交叠率，即它们的交集与并集的比值。</p><p>一般情况下，0.5 是阈值，用来判断预测的边界框是否正确。如果你希望更严格一点，你可以将 IoU 定得更高，比如说大于 0.6 或者更大的数字。IoU 越高，边界框越精确。</p><h2 id="个人反思总结"><a class="markdownIt-Anchor" href="#个人反思总结"></a> 个人反思总结</h2><blockquote><ol><li><p>接触到了许多陌生的概念，读起来感觉有些吃力</p><p>(</p><p>有时非常搞不懂某一步的意义:</p><ul><li>为什么要做这一步，作者是怎么想到要这样做的</li><li>这一步是怎么推导实现的？【突然出现一个公式或是算法，让人感觉摸不着头脑】</li></ul><p>)，</p><ol start="2"><li>应该先找找比较经典的CV论文看看，打好基础</li></ol></li><li><p>很多论文之间的思路都具有关联性，只有多看才能真正理解作者的思路</p></li></ol></blockquote>]]></content>
    
    
    <categories>
      
      <category>深度学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>计算机视觉</tag>
      
      <tag>旋转目标检测</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>保研后记</title>
    <link href="/2021/10/06/Diary/20211006-%E4%BF%9D%E7%A0%94%E5%90%8E%E8%AE%B0/"/>
    <url>/2021/10/06/Diary/20211006-%E4%BF%9D%E7%A0%94%E5%90%8E%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="079a60d0107f4c0da05e58625d0a3df8484f9b8aaaa6d10f3b621f145e4e22bb"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Plz enter the password.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>随笔</category>
      
    </categories>
    
    
    <tags>
      
      <tag>保研</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>更换GPU——重跑Mask-RCNN Demo</title>
    <link href="/2021/05/20/AI-Learning/20210520-%E4%BD%BF%E7%94%A8GPU%E8%B7%91MaskRCNN/"/>
    <url>/2021/05/20/AI-Learning/20210520-%E4%BD%BF%E7%94%A8GPU%E8%B7%91MaskRCNN/</url>
    
    <content type="html"><![CDATA[<h1 id="使用gpu跑mask-rcnn-demo"><a class="markdownIt-Anchor" href="#使用gpu跑mask-rcnn-demo"></a> 使用GPU跑Mask-RCNN Demo</h1><p>使用CPU跑深度学习当然没问题，但是随着深度学习往CV方向(计算机视觉)发展，需要计算机不断对图像进行处理，由此伴随着网络层数的加深，可能会让你的CPU会越来越力不从心！</p><p>而GPU(Graphics Processing Unit)就是为了处理图像而诞生的，因此这是GPU与生俱来的优势，</p><p>让我们通过以下这个短视频来体会一下CPU与GPU的区别吧</p><p>视频需要使用Dplayer视频插件，日后更新上来</p><p>OK，了解完GPU的强大之处后，就让我们把之前的Mask-RCNN项目换成GPU跑一遍吧！</p><p><strong>注</strong>: 本文以下内容：需要电脑至少有一块NVIDA(英伟达)GPU处理器才能顺利进行</p><p>本文Demo运行的外部环境: Win10(64bits) + Anaconda3(2020.11版) + GTX 1060 Max-Q</p><h2 id="cudacudnn"><a class="markdownIt-Anchor" href="#cudacudnn"></a> CUDA&amp;cuDNN</h2><p>CUDA(Compute Unified Device Architecture)，是显卡厂商NVIDIA推出的运算平台。</p><p>cuDNN(CUDA Deep Neural Network)是基于CUDA运算平台，用于深度神经网络的GPU加速库。</p><p>要想实现使用GPU运行Mask-RCNN Demo，必须先安装CUDA和cuDNN</p><h3 id="查看cuda版本支持"><a class="markdownIt-Anchor" href="#查看cuda版本支持"></a> 查看CUDA版本支持</h3><p>首先，来查看你电脑上能支持的CUDA的最高版本吧!</p><p><strong>Step1</strong>:打开cmd命令行窗口，输入<code>nvidia-smi</code>可以看到如下内容:</p><p><img src="/img/article/2021/05/20/1.png" alt="" /></p><p>圈起来的部分就是你的NVIDIA显卡所支持的CUDA版本，本文所使用的电脑最高支持CUDA11.1。</p><blockquote><p>如果输入<code>nvidia-smi</code>提示未找到命令，需要在环境变量Path中添加:</p><p>``C:\Program Files\NVIDIA Corporation\NVSMI`</p></blockquote><p>在后面的下载安装步骤中，首先需要保证 <strong>选择安装的cuda版本</strong> <strong>&lt;=</strong>  <strong>cmd内显示的支持版本</strong></p><p>并且你需要参考下图版本对应关系，保证CUDA、cuDNN、Python、tensorflow-gpu的版本一致性。</p><p><img src="/img/article/2021/05/20/2.png" alt="" /></p><blockquote><p>本文基于的环境配置版本为:</p><ul><li><p>tensorflow-gpu-1.5.0</p></li><li><p>python3.6</p></li><li><p>CUDA9.0</p></li><li><p>cuDNN7.0.5</p></li></ul></blockquote><h3 id="安装cuda"><a class="markdownIt-Anchor" href="#安装cuda"></a> 安装CUDA</h3><p><strong>CUDA已发布版本</strong> ：<a href="https://developer.nvidia.com/cuda-toolkit-archive">https://developer.nvidia.com/cuda-toolkit-archive</a></p><p>本文选择下载安装CUDA9.0(因为之前跑Demo时已经安装tensorflow-gpu-1.5.0了)</p><p>国内下载速度较慢，需要使用外网，如果你也选择安装CUDA9.0版本，可以选择从我的百度网盘中下载。</p><p><strong>Step1</strong>: 访问NVIDIA官网，选择下载CUDA9.0</p><p><img src="/img/article/2021/05/20/3.png" alt="" /></p><p><img src="/img/article/2021/05/20/4.png" alt="" /></p><p><img src="/img/article/2021/05/20/5.png" alt="" /></p><p><strong>Step2</strong>: 安装CUDA9.0</p><p>运行安装程序：</p><p><img src="/img/article/2021/05/20/6.png" alt="" /></p><p>选择自定义，然后勾选全部安装：</p><p><img src="/img/article/2021/05/20/7.png" alt="" /></p><p>安装位置推荐不要改动，就在C盘就行：</p><p><img src="/img/article/2021/05/20/8.png" alt="" /></p><p>这里还要求电脑安装过Visual Studio (2015/2017)，不然装不上nsight：</p><p>本文电脑已安装VS2017</p><p><img src="/img/article/2021/05/20/10.png" alt="" /></p><p>安装完成：</p><p><img src="/img/article/2021/05/20/9.png" alt="" /></p><h3 id="安装cudnn"><a class="markdownIt-Anchor" href="#安装cudnn"></a> 安装cuDNN</h3><p><strong>CUDNN历史版本</strong> ：<a href="https://developer.nvidia.com/rdp/cudnn-archive">https://developer.nvidia.com/rdp/cudnn-archive</a></p><p>本文选择下载安装cuDNN7.0.5(与CUDA9.0版本对应)</p><p>国内下载速度较慢，需要使用外网，如果你也选择安装cuDNN7.0.5版本，可以选择从我的百度网盘中下载。</p><p><strong>Step1</strong>: 访问NVIDIA官网，选择下载cuDNN9.0</p><p><img src="/img/article/2021/05/20/11.png" alt="" /></p><p>下载好cuDNN，解压，把对应文件夹中的东西复制进去即可。</p><h2 id="tensorflow-gpu"><a class="markdownIt-Anchor" href="#tensorflow-gpu"></a> Tensorflow-gpu</h2><p>如果你有参考我上一篇文章，并成功跑起了Demo，那么已经安装过tensorflow-gpu了</p><p>运行如下程序来简单测试是否正在使用GPU进行运算:</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> os<span class="token comment"># os.environ['TF_CPP_MIN_LOG_LEVEL'] = '2'</span><span class="token comment"># 使用编号为0的GPU</span>os<span class="token punctuation">.</span>environ<span class="token punctuation">[</span><span class="token string">"CUDA_VISIBLE_DEVICES"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'0'</span><span class="token keyword">import</span> tensorflow <span class="token keyword">as</span> tf<span class="token keyword">from</span> tensorflow<span class="token punctuation">.</span>python<span class="token punctuation">.</span>client <span class="token keyword">import</span> device_lib<span class="token keyword">print</span><span class="token punctuation">(</span>device_lib<span class="token punctuation">.</span>list_local_devices<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>tf<span class="token punctuation">.</span>test<span class="token punctuation">.</span>gpu_device_name<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>sess<span class="token operator">=</span>tf<span class="token punctuation">.</span>Session<span class="token punctuation">(</span><span class="token punctuation">)</span>a<span class="token operator">=</span>tf<span class="token punctuation">.</span>constant<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>b<span class="token operator">=</span>tf<span class="token punctuation">.</span>constant<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>sess<span class="token punctuation">.</span>run<span class="token punctuation">(</span>a<span class="token operator">+</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><p>可能遇到的问题：</p><p>为什么Tensorflow还是使用的CPU而非GPU？</p><h2 id="demo运行"><a class="markdownIt-Anchor" href="#demo运行"></a> Demo运行</h2><h2 id="碰壁"><a class="markdownIt-Anchor" href="#碰壁"></a> 碰壁</h2><h3 id="为什么tensorflow还是使用的cpu而非gpu"><a class="markdownIt-Anchor" href="#为什么tensorflow还是使用的cpu而非gpu"></a> 为什么Tensorflow还是使用的CPU而非GPU</h3><p>如果你既安装了tensorflow，又安装了tensorflow-gpu，请保证tensorflow-gpu版本&gt;=tensorflow版本</p><p>最保险的方法，是把tensorflow和tensorflow-gpu都卸了，并只重新安装tensorflow-gpu</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 卸载</span>conda uninstall <span class="token assign-left variable">tensorflow</span><span class="token operator">==</span><span class="token number">1.5</span>.0conda uninstall tensorflow-gpu<span class="token operator">==</span><span class="token number">1.5</span>.0<span class="token comment"># 重新安装</span>conda <span class="token function">install</span> tensorflow-gpu<span class="token operator">==</span><span class="token number">1.5</span>.0</code></pre><p>然后再运行上面的测试.py试试。</p>]]></content>
    
    
    <categories>
      
      <category>机器学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>卷积神经网络</tag>
      
      <tag>计算机视觉</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>从0开始——跑起Mask-RCNN Demo</title>
    <link href="/2021/05/16/AI-Learning/20210516-%E4%BB%8E0%E5%BC%80%E5%A7%8BMaskRCNN/"/>
    <url>/2021/05/16/AI-Learning/20210516-%E4%BB%8E0%E5%BC%80%E5%A7%8BMaskRCNN/</url>
    
    <content type="html"><![CDATA[<h1 id="从0开始跑起mask-rcnn-demo"><a class="markdownIt-Anchor" href="#从0开始跑起mask-rcnn-demo"></a> 从0开始——跑起Mask-RCNN Demo</h1><p>本教程适用于0基础入门机器学习的Coder，阅读完之后你将能在你的电脑上跑起来Mask-RCNN官方的Demo噢！</p><p>俗话说: 再🐮的理论也要首先通过实践，把项目跑起来才是硬道理，代码可以之后慢慢研究！</p><p>基于以上原则，本教程:</p><ul><li>只专注于Demo运行的环境配置</li><li>不带有任何机器学习原理的代码原理讲解</li></ul><p>本文Demo运行的外部环境: Win10(64bits) + Anaconda3(2020.11版)</p><h2 id="maskrcnn"><a class="markdownIt-Anchor" href="#maskrcnn"></a> MaskRCNN</h2><h3 id="简介"><a class="markdownIt-Anchor" href="#简介"></a> 简介</h3><p>​   大名鼎鼎的 Mask RCNN 一举夺得 ICCV2017 Best Paper，名声大造。Mask RCNN 是何恺明基于以往的 Faster RCNN 架构提出的新的卷积网络，实现高效地检测图中的物体，并同时生成一张高质量的每个个体的分割掩码，即有效地目标的同时完成了高质量的语义分割。</p><p><img src="/img/article/2021/05/16/1.png" alt="" /></p><p><strong>论文地址</strong>:  <em><a href="https://arxiv.org/abs/1703.06870">https://arxiv.org/abs/1703.06870</a></em></p><h3 id="项目下载"><a class="markdownIt-Anchor" href="#项目下载"></a> 项目下载</h3><p><strong>项目开源地址</strong>: <em><a href="https://github.com/matterport/Mask_RCNN">https://github.com/matterport/Mask_RCNN</a></em></p><p>在开源地址的<a href="https://github.com/matterport/Mask_RCNN/releases">项目release发布页</a>内:</p><ul><li>Mask R-CNN 2.1中下载balloon_dataset.zip、mask_rcnn_balloon.h5、 Source code(zip/tar.gz)</li></ul><p><img src="/img/article/2021/05/16/2.png" alt="" /></p><ul><li>Mask R-CNN 2.0中下载mask_rcnn_coco.h5</li></ul><p><img src="/img/article/2021/05/16/3.png" alt="" /></p><p>本次教程需要用到的只有Source code和mask_rcnn_coco.h5，其他下载的文件在进一步学习中会用到。</p><p>下载完成后，解压Source code，然后将mask_rcnn_coco放在主目录下:</p><p><img src="/img/article/2021/05/16/4.png" alt="" /></p><p>完成以上步骤后就做好了项目前期准备，本文的目的就是要__让Demo.ipynb成功运行__</p><p><img src="/img/article/2021/05/16/target.png" alt="" /></p><h2 id="anacondapython环境配置"><a class="markdownIt-Anchor" href="#anacondapython环境配置"></a> Anaconda[Python环境配置]</h2><p><strong>Anaconda官网下载地址</strong>:  <em><a href="https://www.anaconda.com/products/individual#Downloads">https://www.anaconda.com/products/individual#Downloads</a></em></p><p>安装较为简单，这里不花笔墨叙述如何安装Anaconda，不会可以自行百度Anaconda安装教程。</p><blockquote><p><em>Q</em> :我已经安装了python了，安装Anaconda会有冲突么，需要卸载python再安装Anaconda么？</p><p><em>A</em> :不会冲突，放心安装。Anaconda可以与现有的python版本共存,只要二者都配置了环境变量即可。</p></blockquote><p>给Anaconda换国内源，可以解决下载缓慢的问题=&gt;<a href="#jump1">Conda换源</a></p><p><span color=red>[注]:</span>以下安装命令中所有环境和库的版本，最好与本文版本相同，以免出现不必要的麻烦。</p><h3 id="python虚拟环境"><a class="markdownIt-Anchor" href="#python虚拟环境"></a> Python虚拟环境</h3><p>安装好Anaconda，并配置好环境变量后，打开cmd或Anaconda Prompt。</p><p>进行以下操作:</p><p><strong>Step1</strong>:  创建python3.6版本的虚拟环境</p><pre class="language-bash" data-language="bash"><code class="language-bash">conda create -n <span class="token variable"><span class="token variable">`</span><span class="token punctuation">[</span>虚拟环境名<span class="token punctuation">]</span><span class="token variable">`</span></span> <span class="token assign-left variable">python</span><span class="token operator">=</span><span class="token number">3.6</span></code></pre><p>弹出(y/n)时，输入y即可。</p><p><strong>Step2</strong>:  虚拟环境基础操作命令</p><p><code>激活虚拟环境</code>:</p><pre class="language-bash" data-language="bash"><code class="language-bash">activate <span class="token variable"><span class="token variable">`</span><span class="token punctuation">[</span>虚拟环境名<span class="token punctuation">]</span><span class="token variable">`</span></span></code></pre><p><code>退出虚拟环境</code>:</p><pre class="language-none"><code class="language-none">deactivate</code></pre><p><code>删除虚拟环境</code>:</p><pre class="language-bash" data-language="bash"><code class="language-bash">conda remove -n <span class="token variable"><span class="token variable">`</span><span class="token punctuation">[</span>虚拟环境<span class="token punctuation">]</span><span class="token variable">`</span></span></code></pre><p>激活了虚拟环境后，使用conda/pip的安装命令只会给虚拟环境envs安装；</p><p>如果出现错误，可以选择直接删掉虚拟环境重来。</p><h3 id="jupyter-notebook配置"><a class="markdownIt-Anchor" href="#jupyter-notebook配置"></a> Jupyter Notebook配置</h3><p>一般使用Anaconda创建的python虚拟环境自带Jupyter Notebook，使用以下命令打开:</p><pre class="language-bash" data-language="bash"><code class="language-bash">jupyter notebook</code></pre><p>但自带的会有不完善的地方，这里补全。</p><p><strong>Step1</strong>: 安装nb_conda使Jupyter Notebook能够切换虚拟环境</p><pre class="language-none"><code class="language-none">conda install nb_conda</code></pre><p>安装后打开jupyter notebook 可以看到Conda插件，并显示环境，如下图:</p><p>[笔者的电脑上有root(基础python)、Anaconda2020.11(Anaconda自带)、python3.6(虚拟环境envs))三种环境]</p><p><img src="/img/article/2021/05/16/5.png" alt="" /></p><p>此处可能出现的相关错误:</p><p><a href="#jump2">打开jupyter notebook后，出现Dead Kenel</a></p><p><em>The kernel has died,and the automatic restart has failed.</em></p><p><img src="/img/article/2021/05/16/6.png" alt="" /></p><p>Jupyter NoteBook如果出现问题，一定要看看控制台cmd报了什么错误，根据该错误网上搜索解决</p><h3 id="python库安装"><a class="markdownIt-Anchor" href="#python库安装"></a> Python库安装</h3><p><strong>Step1</strong>: 根据github上Mask-RCNN的ReadMe，要安装requirements.txt中的python库</p><p><img src="/img/article/2021/05/16/7.png" alt="" /></p><p>然而各种库版本不对很容易导致各种问题，四处碰壁。这里推荐按本文的requirements.txt配置</p><p><img src="/img/article/2021/05/16/8.png" alt="" /></p><p>可以点击这里直接下载:<a href="/load/requirements.txt">requirements.txt</a></p><p>编辑好requirements.txt后，然后使用以下命令安装</p><pre class="language-bash" data-language="bash"><code class="language-bash">pip <span class="token function">install</span> -r requirements.txt</code></pre><p>如果不按本文中的requirements.txt配置，请注意<a href="https://www.cnblogs.com/carle-09/p/11661261.html">Tensorflow和Keras版本对应</a></p><p><strong>Step2</strong>: <span id="jump6">安装coco库</span></p><p>该步骤需要区分Window系统和Linux系统安装</p><p><strong>Windows</strong> :</p><pre class="language-bash" data-language="bash"><code class="language-bash">pip <span class="token function">install</span> pycocotools-windows</code></pre><p><strong>Linux</strong> :</p><p>【需要Linux已安装C语言编译器如cmaker】</p><p>方法1:</p><pre class="language-bash" data-language="bash"><code class="language-bash">pip <span class="token function">install</span> git+https://github.com/waleedka/cocoapi.git<span class="token comment">#egg=pycocotools&amp;subdirectory=PythonAPI</span></code></pre><p>方法2:</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> clone https://github.com/waleedka/coco.git<span class="token builtin class-name">cd</span> coco/PythonAPI<span class="token function">make</span><span class="token function">sudo</span> <span class="token function">make</span> <span class="token function">install</span><span class="token function">sudo</span> python setup.py <span class="token function">install</span></code></pre><h2 id="demo运行"><a class="markdownIt-Anchor" href="#demo运行"></a> Demo运行</h2><p><strong>Step1</strong>: cmd打开jupyter notebook</p><pre class="language-bash" data-language="bash"><code class="language-bash">jupyter notebook</code></pre><p><img src="/img/article/2021/05/16/9.png" alt="" /></p><p><strong>Step2</strong>: 打开项目目录下的demo.ipynb，并切换Kenel为你的python3.6虚拟环境</p><p><img src="/img/article/2021/05/16/10.png" alt="" /></p><p><strong>Step3</strong>: 一路<code>Shift</code>+<code>Enter</code>，即可</p><p>Import库时看到如下图，则说明没问题:</p><p><img src="/img/article/2021/05/16/11.png" alt="" /></p><p>最后Run Object  Detection时，首先会看到数据:</p><p><img src="/img/article/2021/05/16/12.png" alt="" /></p><p>等待一会儿会出现训练测试图片:</p><p><img src="/img/article/2021/05/16/13.png" alt="" /></p><p>如果以上步骤完美运行，那么恭喜你，成功跑起来了Mask-RCNN的Demo！</p><p>此处可能出现的相关错误:</p><ol><li><p><a href="#jump3">ImportError: No module named ‘pycocotools’</a></p></li><li><p><a href="#jump4">AttributeError: ‘str’ object has no attribute ‘decode’</a></p></li><li><p><a href="#jump5">AttributeError:module ‘cipy.misc’ has no attribute ‘imresize’</a></p></li></ol><h2 id="碰壁"><a class="markdownIt-Anchor" href="#碰壁"></a> 碰壁</h2><h3 id="span-idjump1conda-换源span"><a class="markdownIt-Anchor" href="#span-idjump1conda-换源span"></a> <span id="jump1">Conda 换源</span></h3><p><strong>清华源</strong></p><pre class="language-bash" data-language="bash"><code class="language-bash">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/msys2/<span class="token comment"># 设置搜索时显示通道地址</span>conda config --set show_channel_urls <span class="token function">yes</span></code></pre><p><strong>中科大源</strong></p><pre class="language-bash" data-language="bash"><code class="language-bash">conda config --add channels https://mirrors.ustc.edu.cn/anaconda/pkgs/main/conda config --add channels https://mirrors.ustc.edu.cn/anaconda/pkgs/free/conda config --add channels https://mirrors.ustc.edu.cn/anaconda/cloud/conda-forge/conda config --add channels https://mirrors.ustc.edu.cn/anaconda/cloud/msys2/conda config --add channels https://mirrors.ustc.edu.cn/anaconda/cloud/bioconda/conda config --add channels https://mirrors.ustc.edu.cn/anaconda/cloud/menpo/<span class="token comment"># 设置搜索时显示通道地址</span>conda config --set show_channel_urls <span class="token function">yes</span></code></pre><h3 id="span-idjump2jupyter-notebook配置相关span"><a class="markdownIt-Anchor" href="#span-idjump2jupyter-notebook配置相关span"></a> <span id="jump2">Jupyter Notebook配置相关</span></h3><p><span style="font-weight:bold;">Dead Kenel内核死亡[ImportError: cannot import name ‘generator_to_async_generator’]</span></p><p>该内核死亡原因，查看cmd，抛出以下错误:</p><pre class="language-bash" data-language="bash"><code class="language-bash">ImportError: cannot <span class="token function">import</span> name <span class="token string">'generator_to_async_generator'</span></code></pre><p><strong>解决方法</strong>:  <a href="https://github.com/ipython/ipython/issues/11270">参考网页</a></p><p>先执行<code>2</code>次，完全卸载ipython 和 prompt_toolkit</p><pre class="language-bash" data-language="bash"><code class="language-bash">pip uninstall -y ipython prompt_toolkit</code></pre><p>再重新安装ipython prompt_toolkit</p><pre class="language-none"><code class="language-none">pip install ipython prompt_toolkit</code></pre><p><strong>[AttributeError: module ‘<a href="http://dateutil.tz">dateutil.tz</a>’ has no attribute ‘UTC’]</strong></p><p>该错误不容易发现，在jupyer notebook中表现为运行无反应。查看cmd，抛出以下错误:</p><pre class="language-bash" data-language="bash"><code class="language-bash">AttributeError: module <span class="token string">'dateutil.tz'</span> has no attribute <span class="token string">'UTC'</span></code></pre><p><strong>解决方法:</strong> <a href="https://stackoverflow.com/questions/60929286/attributeerror-module-dateutil-tz-has-no-attribute-utc-on-zappa-deploy">参考网页</a></p><p>重新强制安装python-dateutil</p><pre class="language-bash" data-language="bash"><code class="language-bash">pip <span class="token function">install</span> python-dateutil --upgrade --force</code></pre><h3 id="demo运行相关"><a class="markdownIt-Anchor" href="#demo运行相关"></a> Demo运行相关</h3><p><span id="jump3" style="font-weight:bold;">[ImportError: No module named ‘pycocotools’]</span></p><p>问题原因: coco库没有成功安装</p><p>解决方法: <a href="#jump6">安装coco库</a></p><p><span id="jump4" style="font-weight:bold;">[AttributeError: ‘str’ object has no attribute ‘decode’]</span></p><p>问题原因: h5py的版本过高，大于了3.0</p><p>解决方法: <a href="https://github.com/keras-team/keras/issues/14265">参考网页</a></p><pre class="language-bash" data-language="bash"><code class="language-bash">pip <span class="token function">install</span> <span class="token assign-left variable">h5py</span><span class="token operator">==</span><span class="token number">2.10</span>.0</code></pre><p><img src="/img/article/2021/05/16/14.png" alt="" /></p><p>安装时要关闭jupyter notebook以防止 h5py文件夹被占用，无法写入h5py2.10.0进行覆盖</p><p><span id="jump5" style="font-weight:bold;">[AttributeError:module ‘scipy.misc’ has no attribute ‘imresize’]</span></p><p>问题原因: scipy的版本过高</p><p>解决方法: <a href="https://stackoverflow.com/questions/56204985/how-to-fix-scipy-misc-has-no-attribute-imresize">参考网页</a></p><pre class="language-bash" data-language="bash"><code class="language-bash">pip <span class="token function">install</span> <span class="token assign-left variable">scipy</span><span class="token operator">==</span><span class="token number">1.2</span>.2</code></pre><p><img src="/img/article/2021/05/16/15.png" alt="" /></p><p>安装时要关闭jupyter notebook以防止 scipy文件夹被占用，无法写入scipy1.2.2进行覆盖</p><p>至此，本文结束，感谢阅读！</p>]]></content>
    
    
    <categories>
      
      <category>机器学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>卷积神经网络</tag>
      
      <tag>计算机视觉</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>密码文章测试</title>
    <link href="/2021/05/04/Diary/20210504-%E9%9A%8F%E6%84%8F%E8%AE%B0%E5%BD%95/"/>
    <url>/2021/05/04/Diary/20210504-%E9%9A%8F%E6%84%8F%E8%AE%B0%E5%BD%95/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="4396f566be317e10a2ddeb6e5e3e3b2e6f62aa575437c3c19957bfc521e100f6">10d79030e8222445804370796b90fca137368a758ff1e0290f9ccb56396bdfee34be4d9e4d03c00b6264c747a4adf98d329fedd9bf054613f907fd75d03ee87d7fae7080e8d49bc5ba7bb12120897cbff51eccd0c1f00178af7206883381cff22567c35a6c156f19e5ecd7ea83e73718255980ed0cd7e01e11c62b8f8581a110b72d7d3d270503158fcc56ec6fa47d9e5ca2856f757866abe33ac8cefc0bb3d024e86c13620f6aa22ad10791953f505c6b87f84adccf483cd128127f6c018dde589ba4ef48267aa16d0f793e034d6443f8e8042fe39504e45fc8a86105a6d0087ea516573b8b40406f8aee38d763b945add8341c5a40a9861068e9666d05a699051cc7bebfd7ed9ce59bb07d5c13c1a6ac76b451f866090f3be89351351cc13d8932fd56ca345713e0f418d7830ac0252ce6b17662076513d12037980d3149339d785ccdc3a2b29b95ebaa3d2f58860c47edb480ca09d6901d1539bb0a4f4e9b4a53a44a3fcf98061bf515a4c764c7e568ce6e3ca5e3eca7ec56b451409b6360510933c0b7ce694061629dadb3c5301d0a39bb180f024926979fa682d7da170023e4f7ae6c34faa89e256c8ba20fec21</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Plz enter the password.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>虚拟机VMware搭建Hadoop3.2.2</title>
    <link href="/2021/03/31/AI-Learning/20210331-VMware%E8%99%9A%E6%8B%9F%E6%9C%BA%E6%90%AD%E5%BB%BAHadoop3/"/>
    <url>/2021/03/31/AI-Learning/20210331-VMware%E8%99%9A%E6%8B%9F%E6%9C%BA%E6%90%AD%E5%BB%BAHadoop3/</url>
    
    <content type="html"><![CDATA[<h2 id="1准备linux主机环境"><a class="markdownIt-Anchor" href="#1准备linux主机环境"></a> 1.准备Linux主机环境</h2><p>VMware:  VMware Workstation 15Pro    <a href="https://www.vmware.com/products/workstation-pro/workstation-pro-evaluation.html">VMware下载地址</a></p><p>CenOS:  CentOS-8.3.2011-x86_64-dvd1.iso    <a href="http://isoredirect.centos.org/centos/8/isos/x86_64/">CenOS下载地址</a></p><p>免密登录 可以帮助解决Permission denied（publickey,gssapi-keyex,gssapi-with-mic)）</p><p><strong>Step1</strong>: 安装Vmware Workstation 15Pro</p><p>​       该步骤不是实验内容核心，具体省略跳过。</p><p><strong>Step2</strong>: 安装3台CenOS8虚拟机</p><p>由于不是实验内容核心，这里只放我所参照的教程:</p><p>Vmware安装CenOS8: <a href="https://www.cnblogs.com/Dear-XiaoLe/articles/12201099.html">https://www.cnblogs.com/Dear-XiaoLe/articles/12201099.html</a></p><p>​       按照教程配置，成功创建3台CenOS虚拟机</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Git命令推送简记</title>
    <link href="/2020/07/29/Programing/20200729-Git%E5%91%BD%E4%BB%A4%E7%AE%80%E8%AE%B0/"/>
    <url>/2020/07/29/Programing/20200729-Git%E5%91%BD%E4%BB%A4%E7%AE%80%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="git-help"><a class="markdownIt-Anchor" href="#git-help"></a> Git-Help</h1><p>Git命令基础操作=&gt;自用</p><h2 id="本地推送流程"><a class="markdownIt-Anchor" href="#本地推送流程"></a> 本地推送流程</h2><ul><li><p><strong>Step1</strong>: 右键=&gt; git bash here,弹出git命令行窗口</p></li><li><p><strong>Step2</strong>: 初始化本地仓库</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> init</code></pre><blockquote><p>本地默认创建主分支master</p></blockquote></li><li><p><strong>Step3</strong>: 本地仓库链接远程仓库</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> remote <span class="token function">add</span> <span class="token punctuation">[</span><span class="token variable"><span class="token variable">`</span>远程仓库名<span class="token variable">`</span></span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token variable"><span class="token variable">`</span>远程仓库地址<span class="token variable">`</span></span><span class="token punctuation">]</span></code></pre><blockquote><p>这里的远程仓库名，习惯上一般使用 origin</p></blockquote></li><li><p><strong>Step4</strong>: 查看本地仓库状态</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> status  </code></pre><blockquote><p>该命令显示已修改但未同步的文件</p></blockquote></li><li><p><strong>Step5</strong>: 将文件同步添加到暂存区</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> <span class="token function">add</span> <span class="token punctuation">[</span><span class="token variable"><span class="token variable">`</span>状态里的新文件<span class="token variable">`</span></span><span class="token punctuation">]</span>  </code></pre><blockquote><p>可用git add -A一键添加</p></blockquote></li><li><p><strong>Step6</strong>: 将文件添加到仓库</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> commit -m <span class="token string">'[<span class="token variable"><span class="token variable">`</span>相关注释文字<span class="token variable">`</span></span>]'</span> </code></pre><blockquote><p>注意-m后的 注释文字要用引号</p></blockquote></li><li><p><strong>Step7</strong>: 将本地某分支推送到远程仓库，如果远程没有此分支会自动创建该分支，默认为master</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> push origin <span class="token punctuation">[</span><span class="token variable"><span class="token variable">`</span>本地分支名<span class="token variable">`</span></span><span class="token punctuation">]</span></code></pre><blockquote><p>origin 为上面提到的默认远程仓库名</p></blockquote></li></ul><hr /><h2 id="tips额外需求"><a class="markdownIt-Anchor" href="#tips额外需求"></a> Tips[额外需求]</h2><h3 id="git-add"><a class="markdownIt-Anchor" href="#git-add"></a> git add</h3><ol><li>一键添加</li></ol><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> <span class="token function">add</span> -A</code></pre><p><em># Changes to be committed:</em></p><p><em>#   new file:   add-me</em></p><p><em>#   modified:   change-me</em></p><p><em>#   deleted:    delete-me</em></p><blockquote><p>​可以一键添加所有未跟踪(new)、修改(modified)、被删除(deleted)文件，修改本地仓库再次提交很方便</p></blockquote><h3 id="git-push-origin"><a class="markdownIt-Anchor" href="#git-push-origin"></a> git push origin</h3><ol><li>删除远程仓库的指定远程分支</li></ol><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> push origin --delete <span class="token punctuation">[</span><span class="token variable"><span class="token variable">`</span>远程分支名<span class="token variable">`</span></span><span class="token punctuation">]</span></code></pre><ol start="2"><li>强制推送</li></ol><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> push -f </code></pre><blockquote><p>用于解决一些本地和远程始终不能同步[当前git pull无效]的问题，比如</p><p>Updates were rejected because the tip of your current branch is behind  its remote counterpart. Integrate the remote changes(e.g.‘git pull …’) before pushing again.</p></blockquote><h3 id="git-remote"><a class="markdownIt-Anchor" href="#git-remote"></a> git remote</h3><ol><li>查看远程仓库</li></ol><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> remote</code></pre><blockquote><p>显示当前已链接的<code>[远程仓库名]</code>  (但不显示远程仓库地址)</p></blockquote><ol start="2"><li>取消指定链接的远程仓库</li></ol><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> remote remove <span class="token punctuation">[</span><span class="token variable"><span class="token variable">`</span>远程仓库名<span class="token variable">`</span></span><span class="token punctuation">]</span>   </code></pre><ol start="3"><li>链接的远程仓库端口不是默认的port:22</li></ol><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> remote origin ssh://<span class="token punctuation">[</span><span class="token variable"><span class="token variable">`</span>用户名<span class="token variable">`</span></span><span class="token punctuation">]</span>@xx.xx.xx.xx:<span class="token punctuation">[</span><span class="token variable"><span class="token variable">`</span>端口号<span class="token variable">`</span></span><span class="token punctuation">]</span>/<span class="token punctuation">..</span>/<span class="token punctuation">..</span>/xxx.git</code></pre><blockquote><p>当远程开放的ssh不是port:22时，使用2、3命令重写绑定链接远程仓库</p><p><strong>PS</strong>:一般github的.git开放ssh端口都是port:22，不用管这个;</p><p>git远程推送你自己的云服务器时，需要查看你自己设定的ssh端口,当然一般也是port:22，但可自主修改</p></blockquote><h2 id="常见问题"><a class="markdownIt-Anchor" href="#常见问题"></a> 常见问题</h2><ul><li><p>Step7推送时: error: src refspec <code>[branchName]</code> does not match any</p><p>修改本地分支名称</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> branch -m <span class="token punctuation">[</span>oldBranchName<span class="token punctuation">]</span> <span class="token punctuation">[</span>newBranchName<span class="token punctuation">]</span></code></pre></li></ul>]]></content>
    
    
    <categories>
      
      <category>常用命令</category>
      
    </categories>
    
    
    <tags>
      
      <tag>git</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>置顶文章测试</title>
    <link href="/2019/10/10/20191010-Test/"/>
    <url>/2019/10/10/20191010-Test/</url>
    
    <content type="html"><![CDATA[<p>这里是正文内容，可以使用html和markdown的格式。</p>]]></content>
    
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>Fluid</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
