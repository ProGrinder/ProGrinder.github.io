<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>今天是个好日子</title>
    <link href="/2021/05/04/20210504/"/>
    <url>/2021/05/04/20210504/</url>
    
    <content type="html"><![CDATA[<p>今天，万明博来到了我家</p><p>以下是背包问题的算法递归方程</p><pre><code class="hljs C++"><span class="hljs-keyword">if</span>(w[i] &lt;= j)&#123;    m[i][j] = max(m[i<span class="hljs-number">-1</span>][j], m[i<span class="hljs-number">-1</span>][j - w[i]] + v[i]); <span class="hljs-comment">//max()函数属于&lt;algorithm&gt;库</span>&#125;<span class="hljs-keyword">else</span>&#123;    m[i][j] = m[i<span class="hljs-number">-1</span>][j];&#125;</code></pre><p>wab lab dab dab!</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>虚拟机VMware搭建Hadoop3.2.2</title>
    <link href="/2021/03/31/20200331/"/>
    <url>/2021/03/31/20200331/</url>
    
    <content type="html"><![CDATA[<h2 id="1-准备Linux主机环境"><a href="#1-准备Linux主机环境" class="headerlink" title="1.准备Linux主机环境"></a>1.准备Linux主机环境</h2><p>VMware:  VMware Workstation 15Pro    <a href="https://www.vmware.com/products/workstation-pro/workstation-pro-evaluation.html">VMware下载地址</a></p><p>CenOS:  CentOS-8.3.2011-x86_64-dvd1.iso    <a href="http://isoredirect.centos.org/centos/8/isos/x86_64/">CenOS下载地址</a></p><p>免密登录 可以帮助解决Permission denied（publickey,gssapi-keyex,gssapi-with-mic)）</p><p><strong>Step1</strong>: 安装Vmware Workstation 15Pro</p><p>​       该步骤不是实验内容核心，具体省略跳过。</p><p><strong>Step2</strong>: 安装3台CenOS8虚拟机</p><p>由于不是实验内容核心，这里只放我所参照的教程: </p><p>Vmware安装CenOS8: <a href="https://www.cnblogs.com/Dear-XiaoLe/articles/12201099.html">https://www.cnblogs.com/Dear-XiaoLe/articles/12201099.html</a></p><p>​       按照教程配置，成功创建3台CenOS虚拟机</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>测试文章</title>
    <link href="/2020/10/01/default/"/>
    <url>/2020/10/01/default/</url>
    
    <content type="html"><![CDATA[<p>余下的正文</p><p><img src="/img/default/Genji.png"></p><p>文章内容图片，不适用绝对路径</p><h3 id="日期-字数-阅读时长-阅读数"><a href="#日期-字数-阅读时长-阅读数" class="headerlink" title="日期/字数/阅读时长/阅读数"></a>日期/字数/阅读时长/阅读数</h3><p>显示在文章页大标题下的文章信息，除了作者和阅读次数，其他功能都是默认开启的。</p><pre><code class="hljs yaml"><span class="hljs-attr">post:</span>  <span class="hljs-attr">meta:</span>    <span class="hljs-attr">author:</span>  <span class="hljs-comment"># 作者，优先根据 front-matter 里 author 字段，其次是 hexo 配置中 author 值</span>      <span class="hljs-attr">enable:</span> <span class="hljs-literal">false</span>    <span class="hljs-attr">date:</span>  <span class="hljs-comment"># 文章日期，优先根据 front-matter 里 date 字段，其次是 md 文件日期</span>      <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span>      <span class="hljs-attr">format:</span> <span class="hljs-string">&quot;dddd, MMMM Do YYYY, h:mm a&quot;</span>  <span class="hljs-comment"># 格式参照 ISO-8601 日期格式化</span>    <span class="hljs-attr">wordcount:</span>  <span class="hljs-comment"># 字数统计</span>      <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span>      <span class="hljs-attr">format:</span> <span class="hljs-string">&quot;&#123;&#125; 字&quot;</span>  <span class="hljs-comment"># 显示的文本，&#123;&#125;是数字的占位符（必须包含)，下同</span>    <span class="hljs-attr">min2read:</span>  <span class="hljs-comment"># 阅读时间</span>      <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span>      <span class="hljs-attr">format:</span> <span class="hljs-string">&quot;&#123;&#125; 分钟&quot;</span>    <span class="hljs-attr">views:</span>  <span class="hljs-comment"># 阅读次数</span>      <span class="hljs-attr">enable:</span> <span class="hljs-literal">false</span>      <span class="hljs-attr">source:</span> <span class="hljs-string">&quot;leancloud&quot;</span>  <span class="hljs-comment"># 统计数据来源，可选：leancloud | busuanzi   注意不蒜子会间歇抽风</span>      <span class="hljs-attr">format:</span> <span class="hljs-string">&quot;&#123;&#125; 次&quot;</span></code></pre>]]></content>
    
    
    <categories>
      
      <category>Diary</category>
      
    </categories>
    
    
    <tags>
      
      <tag>xxx</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Git命令推送简记</title>
    <link href="/2020/07/29/20200729/"/>
    <url>/2020/07/29/20200729/</url>
    
    <content type="html"><![CDATA[<h1 id="Git-Help"><a href="#Git-Help" class="headerlink" title="Git-Help"></a>Git-Help</h1><p>Git命令基础操作=&gt;自用</p><h2 id="本地推送流程"><a href="#本地推送流程" class="headerlink" title="本地推送流程"></a>本地推送流程</h2><ul><li><p>Step1: 右键=&gt; git bash here,弹出git命令行窗口</p></li><li><p>Step2: 初始化本地仓库</p><pre><code class="hljs bash">git init</code></pre><blockquote><p>本地默认创建主分支master</p></blockquote></li><li><p>Step3: 本地仓库链接远程仓库</p><pre><code class="hljs bash">git remote add [`远程仓库名`] [`远程仓库地址`]</code></pre><blockquote><p>这里的远程仓库名，习惯上一般使用 origin</p></blockquote></li><li><p>Step4: 查看本地仓库状态</p><pre><code class="hljs bash">git status</code></pre><blockquote><p>该命令显示已修改但未同步的文件</p></blockquote></li><li><p>Step5: 将文件同步添加到暂存区</p><pre><code class="hljs bash">git add [`状态里的新文件`]</code></pre><blockquote><p>可用git add -A一键添加</p></blockquote></li><li><p>Step6: 将文件添加到仓库</p><pre><code class="hljs bash">git commit -m <span class="hljs-string">&#x27;[`相关注释文字`]&#x27;</span></code></pre><blockquote><p>注意-m后的 注释文字要用引号</p></blockquote></li><li><p>Step7: 将本地某分支推送到远程仓库，如果远程没有此分支会自动创建该分支，默认为master</p><pre><code class="hljs bash">git push origin [`本地分支名`]</code></pre><blockquote><p>origin 为上面提到的默认远程仓库名</p></blockquote></li></ul><hr><h2 id="Tips-额外需求"><a href="#Tips-额外需求" class="headerlink" title="Tips[额外需求]"></a>Tips[额外需求]</h2><h3 id="git-add"><a href="#git-add" class="headerlink" title="git add"></a>git add</h3><ol><li>一键添加</li></ol><pre><code class="hljs bash">git add -A</code></pre><p><em># Changes to be committed:</em></p><p><em>#   new file:   add-me</em></p><p><em>#   modified:   change-me</em></p><p><em>#   deleted:    delete-me</em></p><blockquote><p>​    可以一键添加所有未跟踪(new)、修改(modified)、被删除(deleted)文件，修改本地仓库再次提交很方便</p></blockquote><h3 id="git-push-origin"><a href="#git-push-origin" class="headerlink" title="git push origin"></a>git push origin</h3><ol><li>删除远程仓库的指定远程分支</li></ol><pre><code class="hljs bash">git push origin --delete [`远程分支名`]</code></pre><ol start="2"><li>强制推送</li></ol><pre><code class="hljs bash">git push -f</code></pre><blockquote><p>用于解决一些本地和远程始终不能同步[当前git pull无效]的问题，比如</p><p>Updates were rejected because the tip of your current branch is behind  its remote counterpart. Integrate the remote changes(e.g.’git pull …’) before pushing again. </p></blockquote><h3 id="git-remote"><a href="#git-remote" class="headerlink" title="git remote"></a>git remote</h3><ol><li>查看远程仓库</li></ol><pre><code class="hljs bash">git remote</code></pre><blockquote><p>显示当前已链接的<code>[远程仓库名]</code>  (但不显示远程仓库地址)</p></blockquote><ol start="2"><li>取消指定链接的远程仓库</li></ol><pre><code class="hljs bash">git remote remove [`远程仓库名`]</code></pre><ol start="3"><li>链接的远程仓库端口不是默认的port:22</li></ol><pre><code class="hljs bash">git remote origin ssh://[`用户名`]@xx.xx.xx.xx:[`端口号`]/../../xxx.git</code></pre><blockquote><p>当远程开放的ssh不是port:22时，使用2、3命令重写绑定链接远程仓库</p><p><strong>PS</strong>:一般github的.git开放ssh端口都是port:22，不用管这个;</p><p>git远程推送你自己的云服务器时，需要查看你自己设定的ssh端口,当然一般也是port:22，但可自主修改</p></blockquote><h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><ul><li><p>Step7推送时: error: src refspec <code>[branchName]</code> does not match any</p><p>修改本地分支名称</p><pre><code class="hljs bash">git branch -m [oldBranchName] [newBranchName]</code></pre></li></ul>]]></content>
    
    
    <categories>
      
      <category>常用命令</category>
      
    </categories>
    
    
    <tags>
      
      <tag>git</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>文章标题</title>
    <link href="/2019/10/10/Test/"/>
    <url>/2019/10/10/Test/</url>
    
    <content type="html"><![CDATA[<p>这里是正文内容，可以使用html和markdown的格式。</p>]]></content>
    
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>Fluid</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
